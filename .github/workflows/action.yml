name: GitHub Actions CI

on:
  push:
    branches:
      - '**' 

  pull_request:
    branches:
      - '**'

jobs:

  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rickstaa/action-black@v1
        with:
          black_args: ". --check"

check_markdown:
      needs: setup
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v2
          - name: Setup Node.js
            uses: actions/setup-node@v3
            with:
              node-version: '16'
          - name: Install markdownlint-cli
            run: npm install -g markdownlint-cli
          - name: Create markdownlint config
            run: |
              echo '{
                "MD013": false,
                "line-length": false
              }' > .markdownlint.json
          - name: Run markdown lint
            run: markdownlint '**/*.md' --ignore node_modules
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install pylint flask
      - name: Analyzing the code with pylint
        run: |
          pylint -d C0114,C0115,C0116 $(git ls-files '*.py')

  run-unittests:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ~/requirements.txt
          
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Run unittests
        run: python -m unittest discover
  gitLeaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
